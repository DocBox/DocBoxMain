@model docbox.Models.DX_FILES

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>DX_FILES</legend>

        @Html.HiddenFor(model => model.fileid)

        <div class="editor-label">
            @Html.LabelFor(model => model.filename)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.filename)
            @Html.ValidationMessageFor(model => model.filename)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.parentpath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.parentpath)
            @Html.ValidationMessageFor(model => model.parentpath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ownerid, "DX_USER1")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ownerid", String.Empty)
            @Html.ValidationMessageFor(model => model.ownerid)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.size)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.size)
            @Html.ValidationMessageFor(model => model.size)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isencrypted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isencrypted)
            @Html.ValidationMessageFor(model => model.isencrypted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isarchived)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.isarchived)
            @Html.ValidationMessageFor(model => model.isarchived)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.islocked)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.islocked)
            @Html.ValidationMessageFor(model => model.islocked)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.lockedby, "DX_USER")
        </div>
        <div class="editor-field">
            @Html.DropDownList("lockedby", String.Empty)
            @Html.ValidationMessageFor(model => model.lockedby)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.type)
            @Html.ValidationMessageFor(model => model.type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.creationdate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.creationdate)
            @Html.ValidationMessageFor(model => model.creationdate)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
