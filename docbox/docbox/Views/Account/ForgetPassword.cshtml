@model docbox.Models.ForgetPasswordModel
@{
    ViewBag.Title = "ForgetPassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<h2>ForgetPassword</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Enter following information</legend>
            <div class="editor-label">
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName)
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
           
            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Phone)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Phone)
                @Html.ValidationMessageFor(m => m.Phone)
            </div>

            
            <div class="editor-label">
                @Html.LabelFor(m => m.Position)
            </div>
            <div class="editor-field">
           @Html.DropDownListFor(m => m.Position, new[] {
                new SelectListItem() {Text = "CEO", Value = "CEO"},
                new SelectListItem() {Text = "VP", Value = "VP"},
                new SelectListItem() {Text = "Manager", Value = "Manager"},
                new SelectListItem() {Text = "Employee", Value = "Employee"},
                   }, "Pick your Position")
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Department)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(m => m.Department, new[] {
                new SelectListItem() {Text = "HR", Value = "HR"},
                new SelectListItem() {Text = "IT Support", Value = "IT"},
                new SelectListItem() {Text = "Logistic and Supply", Value = "LOGISTIC"},
                new SelectListItem() {Text = "Sales and Promotion", Value = "SALES"},
                new SelectListItem() {Text = "Research and Development", Value = "RD"},
                new SelectListItem() {Text = "FINANCE", Value = "FINANCE"},
                new SelectListItem() {Text = "Company Management", Value = "MANAGEMENT"}
                   }, "Pick a Department")
            </div>
            <div class="editor-label">
            CAPTCHA
            </div>
            <div class="editor-field">
            <img src = @Url.Content("http://www.opencaptcha.com/img/"
                  + ViewBag.CaptchaGuid + ".jpgx") alt="Captcha" />
                  @Html.Hidden("CaptchaGuid",ViewData["CaptchaGuid"])
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Captcha)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Captcha)
                @Html.ValidationMessageFor(m => m.Captcha)
            </div>
           

            <div class="editor-label">
                @Html.LabelFor(m => m.Answer)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Answer)
                @Html.ValidationMessageFor(m => m.Answer)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.NotificationChoice)
            </div>
            <div class="editor-field">
                @Html.RadioButtonFor(model => model.NotificationChoice, "Email", true) Email
                @Html.RadioButtonFor(model=> model.NotificationChoice, "Phone", false) Phone
                @Html.ValidationMessageFor(m => m.NotificationChoice)
            </div>
            <p>
            </p>
            <p>
                <input type="submit" value="Generate Code" />
            </p>
        </fieldset>
    </div>    
    
}

