@model List<docbox.Models.FileModel>
@{
    ViewBag.Title = "ListDocuments";
    Layout = "~/Views/Shared/_DocumentLayout.cshtml";
}
@Html.ValidationSummary(true)
@{ var grid = new WebGrid(Model, canPage: true, rowsPerPage: 3);
   grid.Pager(WebGridPagerModes.NextPrevious); 
}
<div class="navbar">
    <div class="navbar-inner">
        @using (Html.BeginForm("DocAction", "Documents", FormMethod.Post))
        {
            IDictionary<string, string> searchConditions = new Dictionary<string, string>();

            if (TempData["SearchConditions"] != null)
            {
                searchConditions = TempData["SearchConditions"] as Dictionary<string, string>;
            }

            this.TempData["SearchConditions"] = searchConditions;

            string conditions1 = searchConditions.Keys.Contains("fileName") ? searchConditions["fileName"] : string.Empty;
            <div class="container">
                <ul class="nav">
                    <li class="active"><a class="brand" href="#">Archived Docs</a> </li>
                 <li><input type="submit" value="UnArchive" name="action:UnArchive" /></li>
                <li><label for="txtSearch" class="text-info"></label>
                        <input id="txtSearch" type="text" name="fileName" value="@conditions1" />               
                 <li class="divider-vertical"><label for="search" class="btn btn-link"><i class="icon-search"></i>Search</label>
                        <input id="search" type="submit" name="action:SearchMyDocs" value="Go" class="hidden" /></li>
                        </ul>
                @grid.GetHtml(tableStyle: "webGrid",
          headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
         alternatingRowStyle: "webgrid-alternating-row",
         selectedRowStyle: "webgrid-selected-row",
         rowStyle: "webgrid-row-style",
                htmlAttributes: new { id = "myGrid", name = "myGrid" },
                columns: grid.Columns(
                                    grid.Column(format: @<text><input class="check-box" name="Select" type="checkbox" value=@item.FileID  /></text>),
                                                          grid.Column("FileName"),
                                                                      grid.Column("Description"),
                                                                      grid.Column("FileVersion"),
                                                                      grid.Column("Owner"),
                                                                      grid.Column("CreationDate")
                                            ))
            </div>
            //@Html.ImageActionLink("", "Search", "ListDocuments", "Documents", new { filename = conditions1 }, new { name = "Search"}, new { @class = "icon-search"})
            //grid.Column(format: (item) => { return new HtmlString("<input class='check-box'  id='checkLock' name='checkLock' type='checkbox' onChange='this.form.submit()' value="+ @item.FileID (item.IsLocked == "true" ? new { Checked = "checked" } : null) +"/>"); }),
            //grid.Column(format: (item) => { return new HtmlString("<div class='toggle basic' data-enabled='CHECK-OUT' data-disabled='CHECK-IN' data-toggle='toggle'><input type='checkbox' value='1' name='myCheckbox' class='checkbox' checked='checked' value='@item.IsLocked' /><label class='check' for='myCheckbox'></label></div>"); }),

            //grid.Column(format: @<text><input class="check-box"  id="checkLock" name="checkLock" type="checkbox" onChange="this.form.submit()" value=@item.FileID @(item.IsLocked == "true" ? new { Checked = "checked" } : null) /></text>),

            //@: <li class="btn btn-mini btn-inverse"> @Html.ActionButton(lLink.LinkText, lLink.ActionName, lLink.ControllerName, lLink.IconClass)</li>
            //@using (Ajax.BeginForm("CheckInOut", "Documents", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "myGrid", InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace }, new { id = "ajaxForm" }))
            //, @onchange = "$(this).parents('form:first').find(':submit')[0].click();"

        }
    </div>
</div>
