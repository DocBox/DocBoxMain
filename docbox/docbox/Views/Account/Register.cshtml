@model docbox.Models.RegisterModel
@{
    ViewBag.Title = "Register";
}

<h2>
    Create a New Account</h2>
<p>
    Use the form below to create a new account.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>
            <div class="editor-label">
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName)
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
           
            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Phone)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Phone)
                @Html.ValidationMessageFor(m => m.Phone)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Position)
            </div>
            <div class="editor-field">
           @Html.DropDownListFor(m => m.Position, new[] {
                new SelectListItem() {Text = "CEO", Value = "ceo"},
                new SelectListItem() {Text = "VP", Value = "vp"},
                new SelectListItem() {Text = "Manager", Value = "manager"},
                new SelectListItem() {Text = "Employee", Value = "employee"},
                   }, "Pick your Position")
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Department)
            </div>
            <div class="editor-field">
            
               @Html.ListBoxFor(m => m.Department, new MultiSelectList(ViewBag.Departments, "deptid", "name",Model.Department))
            </div>
            <div class="editor-label">
            Captcha
            </div>      
            <div class="editor-field">
            <img src = @Url.Content("http://www.opencaptcha.com/img/"
                  + ViewBag.CaptchaGuid + ".jpgx") alt="Captcha" />
                  @Html.Hidden("CaptchaGuid", ViewData["CaptchaGuid"])
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Captcha)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Captcha)
                @Html.ValidationMessageFor(m => m.Captcha)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Squestion)
            </div>
            <div class="editor-field">
             @Html.DropDownListFor(m => m.Squestion, new[] {
                new SelectListItem() {Text = "What is name of your favorite childhood friend?", Value="1"},
                new SelectListItem() {Text = "What was the last name of your favorite teacher in primary school?", Value = "2"},
                new SelectListItem() {Text = "In what city or town did your father and mother meet", Value = "3"},
                new SelectListItem() {Text = "Waht is your maternal grandmother's maiden name?", Value = "4"},
                new SelectListItem() {Text = "What was name of your first stuffed animal?", Value = "5"},
                new SelectListItem() {Text = "What street did you lived in 1st grade?", Value = "6"},
                new SelectListItem() {Text = "Which is your favorite Airport?", Value = "7"},
                new SelectListItem() {Text = "What is the name of a University you applied to but didn't attend?", Value = "8"},
                new SelectListItem() {Text = "In what city and country do you want to retire?", Value = "9"},
                
                   }, "-Select One-")


       
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Answer)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Answer)
                @Html.ValidationMessageFor(m => m.Answer)
            </div>
            <p>
                <input type="submit" value="Register" class="btn btn-primary" />
            </p>
        </fieldset>
    </div>
    
    
}
